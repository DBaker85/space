import { outputFile } from 'fs-extra';
import { resolve } from 'path';
import chalk from 'chalk';
import * as sassExtract from 'sass-extract';
import { format, resolveConfig } from 'prettier';

import { hyphenToCamel } from './utils/tools';

const { json2ts } = require('json-ts');

let constants = {
  colors: {}
};

const jsonParser = items => {
  let state = ``;
  Object.keys(items).forEach((item, index, array) => {
    let subitems = ``;
    Object.keys(items[item]).forEach((subitem, index, array) => {
      subitems =
        subitems +
        `${subitem}:'${items[item][subitem]}'${
          index + 1 < array.length ? ',' : ''
        }`;
    });
    state =
      state + `${item}:{${subitems}}${index + 1 < array.length ? ',' : ''}`;
  });
  return state;
};

const constantsTemplate = constants => `
  /**
   * This file is autogenerated from the sass variables.
   * Do not modify manually.
   */

  ${json2ts(JSON.stringify(constants), {
    rootName: 'CssConstants',
    prefix: ''
  })}

  export const cssConstants:CssConstants = {${jsonParser(constants)}};
  `;

const variableFileOut = resolve(
  __dirname,
  '..',
  'src',
  'shared',
  'css-constants.ts'
);
const CompileColors = () => {
  console.log(`${chalk.gray(
    '---'
  )} Generating JS friendly CSS colors ${chalk.gray('---')}
  `);
  const indexFile = resolve(__dirname, '..', 'src', 'scss', '_variables.scss');

  sassExtract
    .render({
      file: indexFile
    })
    .then(
      rendered => {
        Object.keys(rendered.vars).forEach(variableType => {
          Object.keys(rendered.vars[variableType]).forEach(variable => {
            // filter out colors
            if (rendered.vars[variableType][variable].value.hex !== undefined) {
              Object.assign(constants.colors, {
                [hyphenToCamel(variable.replace('$', ''))]: rendered.vars[
                  variableType
                ][variable].value.hex
              });
            }
          });
        });
        resolveConfig(resolve(__dirname, '..')).then(
          options => {
            outputFile(
              variableFileOut,
              format(constantsTemplate(constants), options),
              'utf8'
            ).then(
              () => {
                console.log(
                  `✔️  Variables written to ${chalk.green('css-constants.ts')}
              `
                );
              },
              err => {
                console.log(
                  `❌  ${chalk.red('Error')} writing css variables: ${err}`
                );
              }
            );
          },
          err => {
            console.log(
              `❌  ${chalk.red('Error')} resolving prettier config: ${err}`
            );
          }
        );
      },
      rejected => {
        console.log(`❌  ${chalk.red('Error')} reading ${chalk.green(
          '_variables.scss'
        )}
      ${rejected}
      `);
      }
    );
};

CompileColors();
